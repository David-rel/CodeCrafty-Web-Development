generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  submission    Submission[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Submission {
  id            String   @id @default(cuid())
  complexity    String?
  revisions     Boolean? @default(false)
  pages         Boolean? @default(false)
  database      Boolean? @default(false)
  storage       Boolean? @default(false)
  userBase      Boolean? @default(false)
  monthly       Boolean? @default(false)
  design        Boolean? @default(false)
  databaseScale Boolean? @default(false)
  storageScale  Boolean? @default(false)
  userScale     Boolean? @default(false)
  cost          Int?
  completed     Boolean  @default(false)
  createdAt     DateTime @default(now())
  authorId      String
  description   String?
  author        User     @relation(fields: [authorId], references: [id])

  @@index([authorId])
}
